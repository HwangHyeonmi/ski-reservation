{"version":3,"sources":["components/CustomCard.tsx","tool/ApiPort.ts","main/TeacherList.tsx","main/MainBody.tsx","components/CustomSelect.tsx","components/CustomButton.tsx","main/SearchBox.tsx","main/MainContainer.tsx","sub/DetailPage.tsx","main/Footer.tsx","main/Header.tsx","layout/CommonLayOut.tsx","sub/InputUserInfo.tsx","sub/Payment.tsx","sub/PaymentCompletion.tsx","components/CustomSearch.tsx","sub/ConfirmReservation.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["CustomCard","onClick","id","name","region","score","review","Card","sx","maxWidth","margin","CardContent","style","padding","width","height","overflow","alt","src","boxSizing","fontWeight","Typography","variant","color","Rating","fontSize","top","value","readOnly","apiPort","serverUri","this","uri","requestJson","a","option","method","body","JSON","stringify","headers","console","log","fetch","then","res","status","response","json","data","ok","Error","asyncGet","asyncPost","StyledTeacherList","styled","div","teacherInfo","atom","key","default","TeacherList","history","useHistory","setTeacherInfo","useSetRecoilState","teacherList","useRecoilValue","useEffect","getTeacherList","map","val","push","StyledMainBody","MainBody","CustomSelect","selectArray","getSelectVal","currentVal","React","state","setState","FormControl","m","minWidth","InputLabel","Select","labelId","defaultValue","label","onChange","event","target","MenuItem","CustomButton","Button","minHeight","StyledSearchBox","placeValue","dateValue","timeValue","personelValue","SearchBox","searchval","setPlaceVal","setDateVal","setTimeVal","setPersonelVal","placeVal","dateVal","timeVal","personelVal","MainContainer","StyledBox","currentTeacherInfo","DetailPage","teacherlist","setCurrentTeacher","currentTeacher","i","length","Number","display","left","alert","flexWrap","date","content","rating","border","Footer","lineHeight","backgroundColor","textAlign","StyledHeader","Header","to","StyledContainer","CommonLayOut","children","userName","userPhone","InputUserInfo","setName","setPhone","marginBottom","TextField","e","preventDefault","currentTarget","StyledRow","StyledColumn1","span","StyledColumn2","buyerInfo","pg","pay_method","merchant_uid","amount","buyer_name","buyer_tel","buyer_email","buyer_addr","buyer_postcode","m_redirect_url","place","time","personel","Payment","setBuyerInfo","UserName","UserPhone","CurrentTeacher","Date","getTime","callback","rsp","success","error_msg","axios","url","imp_uid","borderBottom","IMP","window","init","request_pay","PaymentCompletion","userId","useState","_id","userInfo","setUserInfo","getReservation","marginTop","Search","theme","position","borderRadius","shape","alpha","palette","common","white","marginRight","spacing","marginLeft","breakpoints","up","SearchIconWrapper","pointerEvents","alignItems","justifyContent","StyledInputBase","InputBase","paddingLeft","transition","transitions","create","CustomSearch","getChildInputVal","inputVal","setInputVal","Box","placeholder","inputProps","ComfirmReservation","resultData","setResultData","childInputVal","setChildInputVal","App","className","exact","path","component","render","props","match","params","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.bde81d1d.chunk.js","sourcesContent":["import Card from \"@mui/material/Card\";\r\nimport CardContent from \"@mui/material/CardContent\";\r\nimport Rating from \"@mui/material/Rating\";\r\nimport Typography from \"@mui/material/Typography\";\r\n\r\ninterface cardProps {\r\n  id?: number;\r\n  name?: string;\r\n  region?: string;\r\n  score?: number;\r\n  review?: number;\r\n  onClick?: () => void;\r\n}\r\n\r\nexport default function CustomCard({\r\n  onClick,\r\n  id,\r\n  name,\r\n  region,\r\n  score,\r\n  review,\r\n}: cardProps) {\r\n  return (\r\n    <Card onClick={onClick} sx={{ maxWidth: 250, margin: \"15px\" }}>\r\n      <CardContent style={{padding:0}}>\r\n        <div style={{ width: \"250px\", height: \"250px\", overflow: \"hidden\" }}>\r\n          {id && (\r\n            <img\r\n              alt=\"lecturer\"\r\n              style={{ width: \"100%\" }}\r\n              src={`/images/lecturer/lecturer${id}.jpg`}\r\n            />\r\n          )}\r\n        </div>\r\n        <div style={{padding:\"10px\", boxSizing:\"border-box\"}}>\r\n          <div><span style={{fontWeight:800}}>{name}</span> 강사님</div>\r\n          <br />\r\n          <Typography variant=\"body2\" color=\"text.first\">\r\n            {` ${region}`}\r\n          </Typography>\r\n          <br />\r\n          <Typography variant=\"body2\" color=\"text.secondary\">\r\n        평점 : <Rating style={{fontSize:\"1rem\",top:\"2px\"}} name=\"read-only\" value={score} readOnly /> \r\n        | {`리뷰 : ${review}개`}\r\n          </Typography>\r\n       \r\n         \r\n        </div>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n}\r\n","\r\n\r\nclass ApiPort {\r\n    private serverUri: string;\r\n\r\n    constructor(serverUri: string) {\r\n     \r\n        this.serverUri = serverUri;\r\n    }\r\n\r\n    async asyncPost(uri:string, requestJson:any){\r\n      try{\r\n          let option = {\r\n              method: 'post',\r\n              body:JSON.stringify(requestJson),\r\n              headers: {\r\n                  'Content-Type': 'application/json'\r\n              }\r\n          }\r\n\r\n          if(requestJson){\r\n\r\n             option.body =JSON.stringify(requestJson);\r\n             console.log(\"body info\")\r\n          }\r\n\r\n          \r\n          const response = await fetch(uri, option).then(res=>{\r\n              console.log(option)\r\n             \r\n              if(res.status ===200){\r\n                  console.log('response success');\r\n              }else{\r\n                  console.log('response fail: ' + res.status);\r\n              }\r\n              return res;\r\n          });\r\n\r\n          const data = await response.json();\r\n\r\n          return data;\r\n      }\r\n      catch(e){\r\n          console.log(e);\r\n          return null;\r\n      }     \r\n  }\r\n\r\n    private async asyncGet(uri: string) {\r\n        try {\r\n            const option = {\r\n                method: 'GET',\r\n            };\r\n\r\n            const response: Response = await fetch(uri, option);\r\n            if (!response.ok) {\r\n                throw new Error(`HTTP error! status: ${response.status}`);\r\n            }\r\n\r\n            if (response.status === 200) {\r\n                console.log('GET response success', response.body);\r\n            } else {\r\n                console.log('GET response fail' + response.status);\r\n            }\r\n\r\n            return response;\r\n        }\r\n        catch (e) {\r\n            throw new Error(\"GET error\" + e);\r\n            \r\n        }\r\n    }\r\n\r\n  /*   public async insertGameResult(gameResult:any) {\r\n        return await this.asyncPost(this.serverUri, gameResult);\r\n    }\r\n */\r\n    public async getTeacherList() {\r\n        return (await this.asyncGet( `${this.serverUri}/teacherList`)).json();\r\n    }\r\n\r\n   /*  private async insertGameData(gameData:any) {\r\n        let uri = `${this.serverUri}/gameData`;\r\n\r\n        return await this.asyncPost(uri, gameData);\r\n    } */\r\n\r\n    public async getReservation(data:any){\r\n      let uri = `${this.serverUri}/confirmReservation`\r\n      return await this.asyncPost(uri,data);\r\n    }\r\n}\r\n\r\nconst apiPort = new ApiPort(\"https://ski-reservation-server.du.r.appspot.com\");\r\n\r\nexport { apiPort }","import { useEffect } from \"react\";\r\nimport { useHistory } from \"react-router\";\r\nimport styled from \"styled-components\";\r\nimport CustomCard from \"../components/CustomCard\";\r\nimport { apiPort } from \"../tool/ApiPort\";\r\nimport { atom, useRecoilValue, useSetRecoilState } from \"recoil\";\r\n\r\nconst StyledTeacherList = styled.div`\r\n  border-radius: 0.25rem;\r\n  border: 1px solid lightgray;\r\n  backgroud: white;\r\n  margin: 0 auto;\r\n  height: auto;\r\n  padding: 20px;\r\n  box-sizing: border-box;\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n`;\r\n\r\ninterface ITeacherInfo {\r\n  id:number,\r\n  name:string,\r\n  region:string,\r\n  score:number,\r\n  review:number\r\n}\r\n\r\nexport const teacherInfo = atom({\r\n  key: \"teacherInfo\",\r\n  default: [],\r\n});\r\n\r\nconst TeacherList = () => {\r\n  const history = useHistory();\r\n  const setTeacherInfo = useSetRecoilState(teacherInfo);\r\n  const teacherList = useRecoilValue<ITeacherInfo[]>(teacherInfo);\r\n  useEffect(() => {\r\n    apiPort.getTeacherList().then((res) => {\r\n    \r\n      //setTeacherInfo(res);\r\n      if(res){\r\n        setTeacherInfo(res);\r\n      }\r\n      \r\n    });\r\n\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n  const onCardClick = (id: number) => {\r\n    history.push(`/detail/${id}`);\r\n  };\r\n  /*   const teacherList = [\r\n    { id: 1, name: \"이제훈\", region: \"서울\", score: 3.3, review: 3 },\r\n    { id: 2, name: \"이주빈\", region: \"서울\", score: 3.3, review: 3 },\r\n    { id: 3, name: \"김태희\", region: \"서울\", score: 3.3, review: 3 },\r\n    { id: 4, name: \"김선호\", region: \"서울\", score: 3.3, review: 3 },\r\n    { id: 5, name: \"박보검\", region: \"서울\", score: 3.3, review: 3 },\r\n  ]; */\r\n  if (teacherList) {\r\n    return (\r\n      <StyledTeacherList>\r\n        {teacherList.map((val, key) => {\r\n          return (\r\n            <CustomCard\r\n              key={key}\r\n              id={val.id}\r\n              onClick={() => {\r\n                onCardClick(val.id);\r\n              }}\r\n              name={val.name}\r\n              region={val.region}\r\n              score={val.score}\r\n              review={val.review}\r\n            ></CustomCard>\r\n          );\r\n        })}\r\n      </StyledTeacherList>\r\n    );\r\n  } else {\r\n    return <p>조회할 데이터가 없습니다.</p>;\r\n  }\r\n};\r\n\r\nexport default TeacherList;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport TeacherList from \"./TeacherList\";\r\n\r\nconst StyledMainBody = styled.div`\r\n  border-radius: 0.25rem;\r\n  font-size: 1rem;\r\n  border: 1px solid lightgray;\r\n  color: gray;\r\n  backgroud: white;\r\n  width: 100%;\r\n  height: auto;\r\n`;\r\n\r\nconst MainBody = () => {\r\n  return (\r\n    <StyledMainBody>\r\n      <TeacherList></TeacherList>\r\n    </StyledMainBody>\r\n  );\r\n};\r\n\r\nexport default MainBody;\r\n","import * as React from \"react\";\r\nimport InputLabel from \"@mui/material/InputLabel\";\r\nimport MenuItem from \"@mui/material/MenuItem\";\r\nimport FormControl from \"@mui/material/FormControl\";\r\nimport Select, { SelectChangeEvent } from \"@mui/material/Select\";\r\n\r\ninterface props {\r\n  name: string;\r\n  selectArray: Array<string>;\r\n  getSelectVal: (val: string, id: number) => void;\r\n  id: number;\r\n  currentVal: string;\r\n}\r\n\r\nexport default function CustomSelect({\r\n  name,\r\n  selectArray,\r\n  getSelectVal,\r\n  id,\r\n  currentVal,\r\n}: props) {\r\n  const [state, setState] = React.useState(currentVal);\r\n\r\n  const handleChange = (event: SelectChangeEvent) => {\r\n    setState(event.target.value as string);\r\n    getSelectVal(event.target.value, id);\r\n  };\r\n\r\n  return (\r\n    <FormControl sx={{ m: 1, minWidth: 120 }}>\r\n      <InputLabel id=\"demo-simple-select-label\">{name}</InputLabel>\r\n      <Select\r\n        labelId=\"demo-simple-select-label\"\r\n        id=\"demo-simple-select\"\r\n        value={state}\r\n        defaultValue={currentVal}\r\n        label=\"Age\"\r\n        onChange={handleChange}\r\n      >\r\n        {selectArray.map((val, key) => {\r\n          return (\r\n            <MenuItem value={val} key={key}>\r\n              {val}\r\n            </MenuItem>\r\n          );\r\n        })}\r\n      </Select>\r\n    </FormControl>\r\n  );\r\n}\r\n","import { Button, FormControl } from '@mui/material';\r\nimport React from 'react';\r\n\r\ninterface props{\r\n    name:string;\r\n    onClick?:()=>void;\r\n}\r\n\r\nconst CustomButton = ({name,onClick}:props) => {\r\n    return (\r\n        <FormControl sx={{ m: 1, minWidth: 120,height:\"auto\" }}>\r\n      <Button variant=\"contained\" onClick={onClick} style={{height:\"auto\",minHeight:'1.4375em',padding:\"16.5px 14px\"}}>\r\n          {name}</Button>\r\n      </FormControl>\r\n    );\r\n};\r\n\r\nexport default CustomButton;","import styled from \"styled-components\";\r\nimport CustomSelect from \"../components/CustomSelect\";\r\nimport { atom, useRecoilValue, useSetRecoilState } from \"recoil\";\r\nimport CustomButton from \"../components/CustomButton\";\r\nconst StyledSearchBox = styled.div`\r\n  border-radius: 0.25rem;\r\n  border: 1px solid lightgray;\r\n  backgroud: white;\r\n  margin: 0 auto;\r\n  height: auto;\r\n  padding: 40px;\r\n  box-sizing: border-box;\r\n`;\r\n\r\ninterface props {\r\n  searchval: boolean;\r\n}\r\n\r\nexport const placeValue = atom({\r\n  key: \"placeValue\",\r\n  default: \"\",\r\n});\r\n\r\nexport const dateValue = atom({\r\n  key: \"dataValue\",\r\n  default: \"\",\r\n});\r\n\r\nexport const timeValue = atom({\r\n  key: \"timeValue\",\r\n  default: \"\",\r\n});\r\n\r\nexport const personelValue = atom({\r\n  key: \"personelValue\",\r\n  default: \"\",\r\n});\r\nconst SearchBox = ({ searchval }: props) => {\r\n  const regionArray = [\r\n    \"비발디파크(홍천)\",\r\n    \"휘닉스파크(평창)\",\r\n    \"하이원리조트(경선)\",\r\n    \"곤지암리조트(광주)\",\r\n    \"웰리힐리파크(횡성)\",\r\n  ];\r\n\r\n  const dateArray = [\"2022년1월1일\", \"2022년1월2일\"];\r\n  const timeArray = [\"1시\", \"4시\"];\r\n  const personnelArray = [\"1명\", \"2명\", \"3명\"];\r\n\r\n  const setPlaceVal = useSetRecoilState(placeValue);\r\n  const setDateVal = useSetRecoilState(dateValue);\r\n  const setTimeVal = useSetRecoilState(timeValue);\r\n  const setPersonelVal = useSetRecoilState(personelValue);\r\n\r\n  const placeVal = useRecoilValue(placeValue);\r\n  const dateVal = useRecoilValue(dateValue);\r\n  const timeVal = useRecoilValue(timeValue);\r\n  const personelVal = useRecoilValue(personelValue);\r\n\r\n  const getSelectVal = (val: string, id: number) => {\r\n    switch (id) {\r\n      case 1:\r\n        setPlaceVal(val);\r\n        break;\r\n      case 2:\r\n        setDateVal(val);\r\n        break;\r\n      case 3:\r\n        setTimeVal(val);\r\n        break;\r\n      case 4:\r\n        setPersonelVal(val);\r\n        break;\r\n      default:\r\n        console.log(\"선택값이 없어요\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <StyledSearchBox>\r\n      <CustomSelect\r\n        getSelectVal={getSelectVal}\r\n        name=\"장소\"\r\n        currentVal={placeVal ? placeVal : \"\"}\r\n        selectArray={regionArray}\r\n        id={1}\r\n      />\r\n      <CustomSelect\r\n        getSelectVal={getSelectVal}\r\n        currentVal={dateVal ? dateVal : \"\"}\r\n        name=\"날짜\"\r\n        selectArray={dateArray}\r\n        id={2}\r\n      />\r\n      <CustomSelect\r\n        getSelectVal={getSelectVal}\r\n        currentVal={timeVal ? timeVal : \"\"}\r\n        name=\"시간\"\r\n        selectArray={timeArray}\r\n        id={3}\r\n      />\r\n      <CustomSelect\r\n        getSelectVal={getSelectVal}\r\n        currentVal={personelVal ? personelVal : \"\"}\r\n        name=\"인원\"\r\n        selectArray={personnelArray}\r\n        id={4}\r\n      />\r\n      {searchval &&\r\n      <CustomButton name=\"검색하기\"></CustomButton>\r\n        }\r\n    </StyledSearchBox>\r\n  );\r\n};\r\n\r\nexport default SearchBox;\r\n","import MainBody from \"./MainBody\";\r\nimport SearchBox from \"./SearchBox\";\r\nimport { atom } from \"recoil\";\r\n\r\nexport const filterValue = atom({\r\n  key: \"filterValue\",\r\n  default: [\"\"],\r\n});\r\n\r\nconst MainContainer = () => {\r\n  return (\r\n    <>\r\n      <SearchBox searchval={true} />\r\n      <MainBody />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default MainContainer;\r\n","import { useEffect } from \"react\";\r\nimport { useHistory } from \"react-router\";\r\nimport { atom, useRecoilValue, useSetRecoilState } from \"recoil\";\r\nimport styled from \"styled-components\";\r\nimport SearchBox from \"../main/SearchBox\";\r\nimport { teacherInfo } from \"../main/TeacherList\";\r\nimport Rating from \"@mui/material/Rating\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport CustomButton from \"../components/CustomButton\";\r\nimport Button from \"@mui/material/Button\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\n\r\ninterface props {\r\n  id: string;\r\n}\r\n\r\nconst StyledBox = styled.div`\r\n  width: 50%;\r\n  height: 500px;\r\n  border: 1px solid gray;\r\n  padding: 20px;\r\n  box-sizing: border-box;\r\n`;\r\n\r\nexport const currentTeacherInfo = atom({\r\n  key: \"currentTeacher\",\r\n  default: { id: 0, name: \"\", region: \"\", score: 0, review: 0 },\r\n});\r\nconst DetailPage = (id: props) => {\r\n  const history = useHistory();\r\n  const review = [\r\n    { date: \"2021.09.28\", content: \"너무 좋아요\", rating: 5 },\r\n    { date: \"2021.09.28\", content: \"별로네요\", rating: 1 },\r\n    { date: \"2021.09.28\", content: \"재밌었어요\", rating: 4 },\r\n    { date: \"2021.09.28\", content: \"그닥\", rating: 2 },\r\n  ];\r\n  const teacherlist = useRecoilValue(teacherInfo);\r\n\r\n  const setCurrentTeacher = useSetRecoilState(currentTeacherInfo);\r\n  const currentTeacher = useRecoilValue(currentTeacherInfo);\r\n  useEffect(() => {\r\n    for (let i = 0; i < teacherlist.length; i++) {\r\n      if (Number(id.id) === i + 1) {\r\n        setCurrentTeacher(teacherlist[i]);\r\n      }\r\n    }\r\n\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [teacherlist]);\r\n\r\n  return (\r\n    <div style={{ width: \"100%\" }}>\r\n      <div style={{ width: \"100%\", display: \"flex\" }}>\r\n        <StyledBox>\r\n          <h2>강사명: {currentTeacher.name}</h2>\r\n          <div style={{ width: \"300px\", height: \"300px\", overflow: \"hidden\" }}>\r\n            <img\r\n              alt=\"lecturer\"\r\n              style={{ width: \"100%\" }}\r\n              src={`/images/lecturer/lecturer${currentTeacher.id}.jpg`}\r\n            />\r\n          </div>\r\n        </StyledBox>\r\n        <StyledBox>\r\n          <h3>가격: 시간당 1원</h3>\r\n          <div style={{ display: \"flex\", height: \"auto !important\" }}>\r\n            <SearchBox searchval={false} />\r\n          </div>\r\n          <h3>총 결제 금액 : 1원</h3>\r\n\r\n          <CustomButton name=\"결제하기\" onClick={()=>{\r\n        \r\n            history.push(`/InputUserInfo`);\r\n          }} />\r\n         \r\n        </StyledBox>\r\n      </div>\r\n      <div style={{ width: \"100%\",padding:\"20px 20px 50px 20px\", boxSizing:\"border-box\"  }}>\r\n        <h2>상세정보</h2>\r\n        <p>신난다 스키강습 즐겨보자~</p>\r\n      </div>\r\n      <div style={{width:\"100%\", padding:\"20px 20px 50px 20px\", boxSizing:\"border-box\"}}>\r\n        <div style={{display:\"flex\"}}>\r\n          <h2>후기 작성란</h2>\r\n          \r\n        </div>\r\n        <Button style={{left:\"90%\"}} onClick={()=>{\r\n          alert(\"준비중입니다\")\r\n        }}>\r\n              + 후기 작성하기\r\n        </Button>\r\n        \r\n        <div style={{ display: \"flex\", flexWrap: \"wrap\" }}>\r\n          \r\n          {review.map((val, key) => {\r\n            return (\r\n              <div key={key} style={{padding:\"10px\", width: \"50%\", height: \"100px\",border:\"1px solid gray\",boxSizing:\"border-box\" }}>\r\n              \r\n                <>\r\n                  <Typography variant=\"body2\" color=\"text.secondary\">\r\n                    평점 : <Rating style={{fontSize:\"1rem\",top:\"2px\"}} name=\"read-only\" value={val.rating} readOnly />\r\n                  </Typography>\r\n                </>\r\n               \r\n                <p>{val.content}</p>\r\n                \r\n              </div>\r\n            );\r\n          })}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DetailPage;\r\n","import React from \"react\";\r\n\r\nconst Footer = () => {\r\n  return (\r\n    <div style={{ height: \"100px\",color:\"#666\",lineHeight:\"50px\",backgroundColor: \"#ededed\", padding:\"20px\",boxSizing:\"border-box\",textAlign:\"center\" }}>\r\n      Copyright ⓒ2021 Daiski inc, ltd. All rights reserved\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport Button from \"@mui/material/Button\";\r\nimport { Link } from \"react-router-dom\";\r\nconst StyledHeader = styled.div`\r\n  border-radius: 0.25rem;\r\n  font-size: 1rem;\r\n  border: 1px solid lightgray;\r\n  color: gray;\r\n  backgroud: white;\r\n  width: 100%;\r\n  height: 80px;\r\n  padding: 20px;\r\n  box-sizing: border-box;\r\n  display: flex;\r\n  justify-content: space-between;\r\n`;\r\n\r\nconst Header = () => {\r\n  return (\r\n    <StyledHeader>\r\n      <Button variant=\"text\">\r\n        <Link to=\"/\">Daiski</Link>{\" \"}\r\n      </Button>\r\n      {/*  <Button variant=\"outlined\">\r\n        <Link to=\"/detail\">상세페이지</Link>{\" \"}\r\n      </Button> */}\r\n      <Button variant=\"outlined\">\r\n        <Link to=\"/confirmReservation\">예약조회</Link>\r\n      </Button>\r\n    </StyledHeader>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import { BrowserRouter as Router } from \"react-router-dom\";\r\n\r\nimport styled from \"styled-components\";\r\nimport Footer from \"../main/Footer\";\r\nimport Header from \"../main/Header\";\r\n\r\nconst StyledContainer = styled.div`\r\n  border-radius: 0.25rem;\r\n  border: 1px solid lightgray;\r\n  backgroud: white;\r\n  margin: 0 auto;\r\n  max-width: 1200px;\r\n  \r\n  box-sizing:border-box;\r\n`;\r\n\r\ninterface props {\r\n  children: JSX.Element;\r\n}\r\n\r\nconst CommonLayOut = ({ children }: props) => {\r\n  return (\r\n    <StyledContainer>\r\n      <Router>\r\n        <Header />\r\n        {/*  <SearchBox />\r\n      <MainBody />\r\n      <Footer /> */}\r\n        {children}\r\n        <Footer />\r\n      </Router>\r\n    </StyledContainer>\r\n  );\r\n};\r\n\r\nexport default CommonLayOut;\r\n","import TextField from \"@mui/material/TextField\";\r\nimport { useHistory } from \"react-router\";\r\nimport { atom, useSetRecoilState } from \"recoil\";\r\nimport CustomButton from \"../components/CustomButton\";\r\n\r\nexport const userName = atom({\r\n  key: \"userName\",\r\n  default: \"\",\r\n});\r\n\r\nexport const userPhone = atom({\r\n  key: \"userPhone\",\r\n  default: \"\",\r\n});\r\n\r\nconst InputUserInfo = () => {\r\n  const setName = useSetRecoilState(userName);\r\n  const setPhone = useSetRecoilState(userPhone);\r\n  const history = useHistory();\r\n\r\n  const onNameChange = (\r\n    e: React.FormEvent<HTMLInputElement | HTMLTextAreaElement>\r\n  ) => {\r\n    e.preventDefault();\r\n    setName(e.currentTarget.value);\r\n  };\r\n\r\n  const onPhoneNumberChange = (\r\n    e: React.FormEvent<HTMLInputElement | HTMLTextAreaElement>\r\n  ) => {\r\n    e.preventDefault();\r\n    setPhone(e.currentTarget.value);\r\n  };\r\n\r\n\r\n  return (\r\n    <div\r\n      style={{ marginBottom: \"20px\", padding: \"20px\", boxSizing: \"border-box\" }}\r\n    >\r\n      <div>\r\n        <h3>고객 정보를 입력하세요</h3>\r\n\r\n        <TextField\r\n          style={{ marginBottom: \"10px\" }}\r\n          id=\"outlined-basic\"\r\n          label=\"이름\"\r\n          variant=\"outlined\"\r\n          onChange={onNameChange}\r\n        />\r\n        <br />\r\n        <TextField\r\n          style={{ marginBottom: \"10px\" }}\r\n          id=\"outlined-basic\"\r\n          label=\"휴대폰번호\"\r\n          variant=\"outlined\"\r\n          onChange={onPhoneNumberChange}\r\n        />\r\n        <br />\r\n\r\n          <CustomButton name=\"결제하기\" onClick={()=>{\r\n            history.push(`/payment`);\r\n          }} />\r\n       \r\n        <br />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default InputUserInfo;\r\n","import { useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { useHistory } from \"react-router\";\r\nimport { atom, useRecoilValue, useSetRecoilState } from \"recoil\";\r\nimport {\r\n  dateValue,\r\n  personelValue,\r\n  placeValue,\r\n  timeValue,\r\n} from \"../main/SearchBox\";\r\nimport { userName, userPhone } from \"./InputUserInfo\";\r\nimport CustomButton from \"../components/CustomButton\";\r\nimport { currentTeacherInfo } from \"./DetailPage\";\r\nimport styled from \"styled-components\";\r\nconst StyledRow = styled.div`\r\nborder-bottom:1px solid gray;\r\n`;\r\nconst StyledColumn1 = styled.span`\r\nbackground-color:#ededed;\r\nborder-right:1px solid #000;\r\nwidth:15%;\r\ndisplay:inline-block;\r\npadding:10px;\r\nbox-sizing:border-box;\r\n`;\r\n\r\nconst StyledColumn2 = styled.span`\r\npadding-left:20px;\r\n`;\r\n\r\nexport const buyerInfo = atom({\r\n  key: \"buyerInfo\",\r\n  default: {\r\n    pg: \"\", // PG사\r\n    pay_method: \"\", // 결제수단\r\n    merchant_uid: \"\", // 주문번호\r\n    amount: 1, // 결제금액\r\n    name: \"\", // 주문명\r\n    buyer_name: \"\", // 구매자 이름\r\n    buyer_tel: \"\", // 구매자 전화번호\r\n    buyer_email: \"example@example\", // 구매자 이메일\r\n    buyer_addr: \"신사동 661-16\", // 구매자 주소\r\n    buyer_postcode: \"06018\", // 구매자 우편번호\r\n    m_redirect_url: \"http://localhost:3000/\",\r\n    place:\"\",\r\n    date:\"\",\r\n    time:\"\",\r\n    personel:\"\",\r\n  },\r\n});\r\n\r\nconst Payment = () => {\r\n  const setBuyerInfo = useSetRecoilState(buyerInfo);\r\n\r\n  //filterValue\r\n  const placeVal = useRecoilValue(placeValue);\r\n  const dateVal = useRecoilValue(dateValue);\r\n  const timeVal = useRecoilValue(timeValue);\r\n  const personelVal = useRecoilValue(personelValue);\r\n  const UserName = useRecoilValue(userName);\r\n  const UserPhone = useRecoilValue(userPhone);\r\n  const CurrentTeacher = useRecoilValue(currentTeacherInfo);\r\n\r\n  /*   const testFun = (rsp: any) => {\r\n    axios({\r\n      url: \"http://localhost:8080/payments/complete\",\r\n      method: \"post\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      data: {\r\n        imp_uid: rsp.imp_uid,\r\n        merchant_uid: rsp.merchant_uid,\r\n        amount: rsp.amount,\r\n        name: rsp.buyer_name,\r\n      },\r\n    }).then((data) => {\r\n      //서버 결제 API 성공 시 로직\r\n      console.log(data);\r\n      alert(\"결제 성공\");\r\n    });\r\n  };\r\n */\r\n\r\n\r\n  const data = {\r\n    pg: \"kakaopay\", // PG사\r\n    pay_method: \"card\", // 결제수단\r\n    merchant_uid: `mid_${new Date().getTime()}`, // 주문번호\r\n    amount: 1, // 결제금액\r\n    name: `${CurrentTeacher.name}`, // 주문명\r\n    buyer_name: `${UserName}`, // 구매자 이름\r\n    buyer_tel: `${UserPhone}`, // 구매자 전화번호\r\n    buyer_email: \"example@example\", // 구매자 이메일\r\n    buyer_addr: \"신사동 661-16\", // 구매자 주소\r\n    buyer_postcode: \"06018\", // 구매자 우편번호\r\n    m_redirect_url: \"http://localhost:3000/\",\r\n    place:`${placeVal}`, //예약장소\r\n    date:`${dateVal}`, //예약날짜\r\n    time: `${timeVal}`, //예약시간\r\n    personel: `${personelVal}` //예약 인원\r\n    \r\n  };\r\n  const history = useHistory();\r\n  const onClickPayment = () => {\r\n    const { IMP } = window;\r\n    if (IMP) {\r\n      IMP.init(\"imp80957377\");\r\n    }\r\n    if (IMP) {\r\n      IMP.request_pay(data, callback);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {}, []);\r\n  const callback = (rsp: any) => {\r\n    const { success, error_msg } = rsp;\r\n    setBuyerInfo(data);\r\n    if (success) {\r\n      //axios로 HTTP요청\r\n      // alert(\"결제 성공\");\r\n\r\n      \r\n      \r\n      axios({\r\n        url: \"http://localhost:8080/payments/complete\",\r\n        method: \"post\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        data: {\r\n          imp_uid: rsp.imp_uid,\r\n          merchant_uid: rsp.merchant_uid,\r\n          place:`${placeVal}`,\r\n          date:`${dateVal}`,\r\n          time:`${timeVal}`,\r\n          personel:`${personelVal}`\r\n        },\r\n      }).then((data) => {\r\n        //서버 결제 API 성공 시 로직\r\n        console.log(data);\r\n\r\n        alert(\"결제 성공\");\r\n        history.push(`/PaymentCompletion`);\r\n        \r\n      });\r\n    } else {\r\n      alert(`결제 실패: ${error_msg}`);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div\r\n      style={{ marginBottom: \"20px\", padding: \"20px\", boxSizing: \"border-box\" }}\r\n    >\r\n  {/*     <h2>결제 정보</h2> */}\r\n      <div style={{border:\"1px solid gray\",margin:\"30px 0\",boxSizing:\"border-box\"}}>\r\n          <h3 style={{borderBottom:\"1px solid gray\", margin:0,padding:\"10px\"}}>예약정보</h3>\r\n          <div style={{ display: \"flex\" }}>\r\n            <div style={{ width: \"100%\" }}>\r\n              <StyledRow>\r\n                <StyledColumn1>\r\n                  이름 </StyledColumn1>\r\n                <StyledColumn2>{UserName}</StyledColumn2>\r\n              </StyledRow>\r\n              <StyledRow>\r\n                <StyledColumn1>\r\n                연락처  </StyledColumn1>\r\n                <StyledColumn2>{UserPhone}</StyledColumn2>\r\n              </StyledRow>\r\n              <StyledRow>\r\n                <StyledColumn1>\r\n                장소  </StyledColumn1>\r\n                <StyledColumn2>{placeVal}</StyledColumn2>\r\n              </StyledRow>\r\n              <StyledRow>\r\n                <StyledColumn1>\r\n                  날짜  </StyledColumn1>\r\n                <StyledColumn2>{dateVal}</StyledColumn2>\r\n              </StyledRow>\r\n              <StyledRow>\r\n                <StyledColumn1>\r\n                  시간  </StyledColumn1>\r\n                <StyledColumn2>{timeVal}</StyledColumn2>\r\n              </StyledRow>\r\n              <StyledRow>\r\n                <StyledColumn1>\r\n                  인원  </StyledColumn1>\r\n                <StyledColumn2>{personelVal}</StyledColumn2>\r\n              </StyledRow>\r\n              <StyledRow >\r\n                <StyledColumn1>금액 </StyledColumn1>\r\n                <StyledColumn2>1원</StyledColumn2>\r\n              </StyledRow>\r\n            </div>\r\n          </div>\r\n        </div>\r\n   \r\n      <div>\r\n        {/*  <h3>결제수단</h3>\r\n        <div>카카오페이</div>\r\n        <div>네이버</div>\r\n        <div>무통장입금</div> */}\r\n      </div>\r\n      {/*  <div\r\n        onClick={() => {\r\n          testFun(data);\r\n        }}\r\n      >\r\n        TEST\r\n      </div> */}\r\n   \r\n        <br/>\r\n        <CustomButton name=\"결제하기\" onClick={onClickPayment} />\r\n       \r\n    \r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Payment;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useRecoilValue } from \"recoil\";\r\nimport { apiPort } from \"../tool/ApiPort\";\r\nimport { buyerInfo } from \"./Payment\";\r\nimport styled from \"styled-components\";\r\nimport Button from \"@mui/material/Button\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst StyledRow = styled.div`\r\nborder-bottom:1px solid gray;\r\n`;\r\nconst StyledColumn1 = styled.span`\r\nbackground-color:#ededed;\r\nborder-right:1px solid #000;\r\nwidth:15%;\r\ndisplay:inline-block;\r\npadding:10px;\r\nbox-sizing:border-box;\r\n`;\r\n\r\nconst StyledColumn2 = styled.span`\r\npadding-left:20px;\r\n`;\r\n\r\nconst PaymentCompletion = () => {\r\n  const userId = useRecoilValue(buyerInfo);\r\n  const [userInfo, setUserInfo] = useState({\r\n    buyer_name: \"\",\r\n    name: \"\",\r\n    amount: 0,\r\n    buyer_tel: \"\",\r\n    _id: \"\",\r\n    place:\"\",\r\n    date:\"\",\r\n    time:\"\",\r\n    personel:\"\"\r\n  });\r\n  useEffect(() => {\r\n    console.log(userId);\r\n    console.log(userId.merchant_uid);\r\n    apiPort.getReservation({ id: userId.merchant_uid }).then((res) => {\r\n      console.log(res);\r\n      setUserInfo(res);\r\n       \r\n    });\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n\r\n\r\n  return (\r\n    <div style={{padding:\"10px\",boxSizing:\"border-box\",marginBottom:\"50px\" }}>\r\n      <h2 style={{marginBottom:\"50px\"}}>결제가 완료되었습니다. </h2>\r\n\r\n      <h3 style={{borderBottom:\"1px solid gray\", margin:0,padding:\"10px\",}}>결제정보</h3>\r\n          <div style={{ display: \"flex\" }}>\r\n            <div style={{ width: \"100%\" }}>\r\n              <StyledRow>\r\n                <StyledColumn1>\r\n                주문번호 </StyledColumn1>\r\n                <StyledColumn2>{userInfo._id?userInfo._id:\"\"}</StyledColumn2>\r\n              </StyledRow>\r\n              <StyledRow>\r\n                <StyledColumn1>\r\n                고객명  </StyledColumn1>\r\n                <StyledColumn2>{userInfo.buyer_name?userInfo.buyer_name:\"\"}</StyledColumn2>\r\n              </StyledRow>\r\n              <StyledRow>\r\n                <StyledColumn1>\r\n                전화번호 \r\n                </StyledColumn1>\r\n                <StyledColumn2>{userInfo.buyer_tel?userInfo.buyer_tel:\"\"}</StyledColumn2>\r\n              </StyledRow>\r\n              <StyledRow>\r\n                <StyledColumn1>\r\n                강사명  </StyledColumn1>\r\n                <StyledColumn2>{userInfo.name?userInfo.name:\"\"}\r\n                </StyledColumn2>\r\n              </StyledRow>\r\n              <StyledRow>\r\n                <StyledColumn1>\r\n                결제금액  </StyledColumn1>\r\n                <StyledColumn2> {userInfo.amount?userInfo.amount:\"\"}원</StyledColumn2>\r\n              </StyledRow>\r\n              <StyledRow>\r\n                <StyledColumn1>\r\n                  장소  </StyledColumn1>\r\n                <StyledColumn2>{userInfo.place?userInfo.place:\"\"}</StyledColumn2>\r\n              </StyledRow>\r\n              <StyledRow>\r\n                <StyledColumn1>\r\n                  날짜 </StyledColumn1>\r\n                <StyledColumn2>{userInfo.date?userInfo.date:\"\"}</StyledColumn2>\r\n            </StyledRow>\r\n            <StyledRow>\r\n                <StyledColumn1>\r\n                  시간 </StyledColumn1>\r\n                <StyledColumn2>{userInfo.time?userInfo.time:\"\"}</StyledColumn2>\r\n            </StyledRow>\r\n            <StyledRow>\r\n                <StyledColumn1>\r\n                  인원 </StyledColumn1>\r\n                <StyledColumn2>{userInfo.personel?userInfo.personel:\"\"}</StyledColumn2>\r\n            </StyledRow>\r\n            </div>\r\n            \r\n          </div>\r\n          <div style={{textAlign:\"center\", marginTop:\"20px\"}}>\r\n          <Button variant=\"outlined\">\r\n              <Link to=\"/confirmReservation\">예약조회</Link>\r\n          </Button>\r\n          </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PaymentCompletion;\r\n","import { styled, alpha } from \"@mui/material/styles\";\r\nimport Box from \"@mui/material/Box\";\r\nimport InputBase from \"@mui/material/InputBase\";\r\nimport SearchIcon from \"@mui/icons-material/Search\";\r\nimport { useState } from \"react\";\r\nimport { Button } from \"@mui/material\";\r\n\r\n\r\nconst Search = styled(\"div\")(({ theme }) => ({\r\n  position: \"relative\",\r\n  borderRadius: theme.shape.borderRadius,\r\n  border: \"1px solid gray\",\r\n  backgroundColor: alpha(theme.palette.common.white, 0.15),\r\n  \"&:hover\": {\r\n    backgroundColor: alpha(theme.palette.common.white, 0.25),\r\n  },\r\n  marginRight: theme.spacing(2),\r\n  marginLeft: 0,\r\n  width: \"60%\",\r\n  [theme.breakpoints.up(\"sm\")]: {\r\n    marginLeft: theme.spacing(3),\r\n  },\r\n}));\r\n\r\nconst SearchIconWrapper = styled(\"div\")(({ theme }) => ({\r\n  padding: theme.spacing(0, 2),\r\n  height: \"100%\",\r\n  position: \"absolute\",\r\n  pointerEvents: \"none\",\r\n  display: \"flex\",\r\n  alignItems: \"center\",\r\n  justifyContent: \"center\",\r\n}));\r\n\r\nconst StyledInputBase = styled(InputBase)(({ theme }) => ({\r\n  color: \"inherit\",\r\n  \"& .MuiInputBase-input\": {\r\n    padding: theme.spacing(1, 1, 1, 0),\r\n    // vertical padding + font size from searchIcon\r\n    paddingLeft: `calc(1em + ${theme.spacing(4)})`,\r\n    transition: theme.transitions.create(\"width\"),\r\n    width: \"100%\",\r\n    [theme.breakpoints.up(\"md\")]: {\r\n      width: \"20ch\",\r\n    },\r\n  },\r\n}));\r\n\r\ninterface props {\r\n  getChildInputVal: (val: string) => void;\r\n}\r\n\r\nexport default function CustomSearch({ getChildInputVal }: props) {\r\n  const [inputVal, setInputVal] = useState(\"\");\r\n  const onChange = (\r\n    e: React.FormEvent<HTMLInputElement | HTMLTextAreaElement>\r\n  ) => {\r\n    e.preventDefault();\r\n    setInputVal(e.currentTarget.value);\r\n  };\r\n\r\n  return (\r\n    <Box style={{ display: \"flex\",height:\"50px\" }}>\r\n      <div style={{margin: \"0 auto\", width:\"70%\", display:\"flex\"}}>\r\n      <Search style={{width:\"90%\"}}>\r\n        <SearchIconWrapper>\r\n          <SearchIcon />\r\n        </SearchIconWrapper>\r\n        <StyledInputBase\r\n          style={{width:\"100%\",height:\"100%\"}}\r\n          onChange={onChange}\r\n          placeholder=\"주문번호를 입력하세요\"\r\n          inputProps={{ \"aria-label\": \"search\" }}\r\n        />\r\n      </Search>\r\n      <Button\r\n        variant=\"contained\"\r\n        onClick={() => {\r\n          getChildInputVal(inputVal);\r\n        }}\r\n      >확인</Button>\r\n      </div>\r\n       \r\n     \r\n    </Box>\r\n  );\r\n}\r\n","import { useEffect, useState } from \"react\";\r\nimport CustomSearch from \"../components/CustomSearch\";\r\nimport { apiPort } from \"../tool/ApiPort\";\r\nimport styled from \"styled-components\";\r\n\r\nconst StyledRow = styled.div`\r\nborder-bottom:1px solid gray;\r\n`;\r\nconst StyledColumn1 = styled.span`\r\nbackground-color:#ededed;\r\nborder-right:1px solid #000;\r\nwidth:15%;\r\ndisplay:inline-block;\r\npadding:10px;\r\nbox-sizing:border-box;\r\n`;\r\n\r\nconst StyledColumn2 = styled.span`\r\npadding-left:20px;\r\n`;\r\ninterface resultData{\r\n  _id:string,\r\n  amount:number,\r\n  place:string,\r\n  date:string,\r\n  time:string,\r\n  personel:number,\r\n  name:string,\r\n}\r\n\r\nconst ComfirmReservation = () => {\r\n  const [resultData, setResultData] = useState<resultData>();\r\n\r\n  const [childInputVal, setChildInputVal] = useState(\"\");\r\n\r\n  const getChildInputVal = (val: string) => {\r\n    setChildInputVal(val);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if(childInputVal){\r\n      apiPort.getReservation({ id: childInputVal }).then((res) => {\r\n        setResultData(res);\r\n      });\r\n    }\r\n    \r\n  }, [childInputVal]);\r\n  const resultCom = () =>{\r\n    if(!childInputVal||!resultData){\r\n      return (<div style={{width:\"100%\",height:\"100px\",textAlign:\"center\", margin:\" 30px 0\",lineHeight:\"100px\"}}> 조회내역이 없습니다.</div>)\r\n    }else{\r\n      return (<div style={{border:\"1px solid gray\",margin:\"30px 0\",boxSizing:\"border-box\"}}>\r\n          <h3 style={{borderBottom:\"1px solid gray\", margin:0,padding:\"10px\"}}>예약내역</h3>\r\n          <div style={{ display: \"flex\" }}>\r\n            <div style={{ width: \"100%\" }}>\r\n              <StyledRow>\r\n                <StyledColumn1>예약번호  </StyledColumn1>\r\n                <StyledColumn2>{resultData._id}</StyledColumn2>\r\n              </StyledRow>\r\n              <StyledRow>\r\n                <StyledColumn1>강사명  </StyledColumn1>\r\n                <StyledColumn2>{resultData.name}</StyledColumn2>\r\n              </StyledRow>\r\n              <StyledRow style={{borderBottom:\"1px solid gray\"}}>\r\n                <StyledColumn1>장소  </StyledColumn1>\r\n                <StyledColumn2>{resultData.place}</StyledColumn2>\r\n              </StyledRow>\r\n              <StyledRow style={{borderBottom:\"1px solid gray\"}}>\r\n                <StyledColumn1>날짜  </StyledColumn1>\r\n                <StyledColumn2>{resultData.date}</StyledColumn2>\r\n              </StyledRow>\r\n              <StyledRow style={{borderBottom:\"1px solid gray\"}}>\r\n                <StyledColumn1>시간  </StyledColumn1>\r\n                <StyledColumn2>{resultData.time}</StyledColumn2>\r\n              </StyledRow>\r\n              <StyledRow style={{borderBottom:\"1px solid gray\"}}>\r\n                <StyledColumn1>인원  </StyledColumn1>\r\n                <StyledColumn2>{resultData.personel}</StyledColumn2>\r\n              </StyledRow>\r\n              <StyledRow >\r\n                <StyledColumn1>금액 </StyledColumn1>\r\n                <StyledColumn2>{resultData.amount}원</StyledColumn2>\r\n              </StyledRow>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        )\r\n    }\r\n\r\n    \r\n  }\r\n  return (\r\n    <div style={{ width: \"90%\", margin: \"0 auto\",  }}>\r\n      <p style={{fontSize:\"20px\"}}>예약 조회</p>\r\n      <CustomSearch getChildInputVal={getChildInputVal} />\r\n      {resultCom()}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ComfirmReservation;\r\n","import \"./App.css\";\r\nimport MainContainer from \"./main/MainContainer\";\r\nimport { Route, Switch } from \"react-router-dom\";\r\nimport DetailPage from \"./sub/DetailPage\";\r\nimport CommonLayOut from \"./layout/CommonLayOut\";\r\nimport Payment from \"./sub/Payment\";\r\nimport PaymentCompletion from \"./sub/PaymentCompletion\";\r\nimport ComfirmReservation from \"./sub/ConfirmReservation\";\r\nimport InputUserInfo from \"./sub/InputUserInfo\";\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <CommonLayOut>\r\n        <Switch>\r\n          <Route exact path=\"/\" component={MainContainer} />\r\n          <Route exact path=\"/detail\" component={DetailPage} />\r\n          <Route\r\n            exact\r\n            path=\"/detail/:id\"\r\n            render={(props) => <DetailPage id={props.match.params.id} />}\r\n          />\r\n          <Route exact path=\"/payment\" component={Payment}></Route>\r\n          <Route\r\n            exact\r\n            path=\"/PaymentCompletion\"\r\n            component={PaymentCompletion}\r\n          ></Route>\r\n          <Route exact path=\"/InputUserInfo\" component={InputUserInfo}></Route>\r\n          <Route\r\n            exact\r\n            path=\"/confirmReservation\"\r\n            component={ComfirmReservation}\r\n          ></Route>\r\n        </Switch>\r\n      </CommonLayOut>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\nimport { RecoilRoot } from \"recoil\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <RecoilRoot>\r\n      <App />\r\n    </RecoilRoot>\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}